README

This project is an Authorization Microservice built to operate as a standalone application in a
microservice architecture. OAuth2.0 authorization protocol is used to issue and verify access
tokens for new and existing Users. Django Guardian is used to issue permissions to Users and Groups
which will determine the scope of a User's access token. Access token scopes are used by other
applications to restrict access to information/actions.

GETTING STARTED

These steps must be completed to begin using the service.

1) Go to /admin and login to the admin site (ask nicely for login info)
2) While logged in as admin, go to /o/applications to create an application to be used with this
    Authorization Microservice. Be sure to select the following fields...
        * Client type: Confidential
        * Authorization grant type: Resource owner password-based
    IMPORTANT:
        * If you are not logged in as admin you cannot access o/applications
        * Check the "Mobile Application" flag to issue persistent access tokens.
          If you are creating a web application, leave this unchecked.
3) Use /signup to create new Users
4) Use /login to authenicate a User's credentials and issue an access token


API ENDPOINTS

/signup ---------- create a User and log them in
/login ----------- login existing users
/logout ---------- revoke tokens
/refresh --------- refresh a token
/valid ----------- check if a token is valid
/us -------------- used to test a scope protected resource
/o/applications -- create and manage applications


Also important:
We tried to implement automated tests into this Auth Microservice, but that proved difficult.